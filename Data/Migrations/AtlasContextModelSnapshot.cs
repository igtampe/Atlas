// <auto-generated />
using System;
using Atlas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Atlas.Data.Migrations
{
    [DbContext(typeof(AtlasContext))]
    partial class AtlasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Atlas.Common.Article", b =>
                {
                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EditLevel")
                        .HasColumnType("integer");

                    b.Property<string>("LastAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginalAuthor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Title");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Atlas.Common.Image", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UploaderUsername")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("UploaderUsername");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Atlas.Common.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<int>("EditLevel")
                        .HasColumnType("integer");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUploader")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Atlas.Common.Image", b =>
                {
                    b.HasOne("Atlas.Common.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderUsername");

                    b.Navigation("Uploader");
                });
#pragma warning restore 612, 618
        }
    }
}
